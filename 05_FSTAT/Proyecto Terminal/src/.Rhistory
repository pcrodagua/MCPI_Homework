h_x <- matrix(c(-40, 0.25), ncol = 1)
h_x
h_x <- matrix(c(-40, 0.25), nrow = 1)
h_x
x* h_x
x <- matrix(c(1, 1, 1, 1, 2104, 1416, 1534, 852), ncol = 2)
h_x <- matrix(c(-40, 0.25), ncol = 2)
h_x
x <- matrix(c(1, 1, 1, 1, 2104, 1416, 1534, 852), ncol = 2)
x
h_x <- matrix(c(-40, 0.25), ncol = 2)
h_x
x* h_x
x
h_x <- matrix(c(-40, 0.25), nrow = 2)
x <- matrix(c(1, 1, 1, 1, 2104, 1416, 1534, 852), ncol = 2)
x
h_x <- matrix(c(-40, 0.25), nrow = 2)
h_x
x* h_x
h_x <- matrix(c(-40, 0.25), nrow = 1)
h_x
x* h_x
h_x <- matrix(c(-40, 0.25), ncol = 1)
h_x
x* h_x
x <- matrix(c(1, 1, 1, 1, 2104, 1416, 1534, 852), ncol = 2)
x
h_x <- matrix(c(-40, 0.25), ncol = 1)
h_x
x* h_x
x%*%h_x
h_1 <- matrix(c(-40, 0.25), ncol = 1)
h_2 <- matrix(c(200, 0.1), ncol = 1)
h_3 <- matrix(c(-150, 0.4), ncol = 1)
h_2
h_1
h_2
h_3
h_x <- matrix(c((-40, 200, -150, 0.25, 0.1, 0.4), nrow=2)
h_x <- matrix(c(-40, 200, -150, 0.25, 0.1, 0.4), nrow=2)
h_x
x*h_x
x%*%h_x
h_x
x%*%h_x
print(a)
# variables
a <- 5
b <- 6
print(a)
# variables
a <- 5
b <- 6
print(a)
msg <- "hello"
msg
# variables
x <- NaN## expresión incompleta
x <- vector("numeric", length = 10) ## numeric
x
x <- c(0.5, 0.6) ## numeric
x
x <- c(TRUE, FALSE) ## logical
x
x <- c(T, F) ## logical
x
x <- c("a", "b", "c") ## character
x
x <- 9:29 ## integer
x
x <- c(1+0i, 2+4i)## complex
x <- c(0.5, 0.6) ## numeric
x
x <- c(TRUE, FALSE) ## logical
x
x <- c(T, F) ## logical
x
x <- c("a", "b", "c") ## character
x
x <- 9:29 ## integer
x
x <- c(1+0i, 2+4i)## complex
x
x <- vector("numeric", length = 10) ## numeric
x
y <- c(1.7, "a")
y <- c(TRUE, 2)
y <- c("a", TRUE)
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
y <- c("a", TRUE)
y
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
y <- c("a", TRUE)
y
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- c("a", "b", "c")
as.numeric(x)
as.logical(x)
as.complex(x)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)
x <- list(1, "a", TRUE, 1 + 4i)
x
x <- list(1, "a", TRUE, 1 + 4i)
x[1]
x <- list(1, "a", TRUE, 1 + 4i)
x[2]
x <- list(1, "a", TRUE, 1 + 4i)
x
x[2]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# función repeat
i <- 0
repeat{
if (i %% 2 == 0) {
print(i)
}
i <- i +1
if(i == 10){
break
}
}
source('~/.active-rstudio-document', echo=TRUE)
# función repeat
i <- 0
repeat{
if (i %% 2 == 0) {
i
}
i <- i +1
if(i == 11){
break
}
}
# función repeat
i <- 0
repeat{
if (i %% 2 == 0) {
print(i)
}
i <- i +1
if(i == 11){
break
}
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
# función repeat
i <- 0
repeat{
i <- i +1
if (i %% 2 == 0) {
print(i)
} else	if(i == 10){
break
}
}
# función repeat
i <- 0
repeat{
i <- i +1
if (i %% 2 == 0) {
print(i)
}
if(i == 10){
break
}
}
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
# Ejercicio 02:
i <- 1
msg <- c('hello')
repeat{
print(msg)
if(i == 5){
break
}
}
i <- 1
msg <- c('hello')
repeat{
print(msg)
if(i == 5){
break
}
i <- i +1
}
# Ejercicio 02:
i <- 1
msg <- c('hello')
repeat{
print(msg[1])
if(i == 5){
break
}
i <- i +1
}
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
# Ejercicio 04:
i <- 1
while (i <= 6) {
print(msg)
i <- i +1
}
# Ejercicio 04:
x <- c(7,4,3,8,9,25)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
source('~/Dropbox/MCPI/SEM_01/01_AyPD/Ejercicios/clase02.R', echo=TRUE)
View(sum_function)
View(sum_function)
# Ejercicio 05:
sum_function <- function(a, b) {
return (a + b)
}
print(sum_function(1,2))
# Ejercicio 05:
sum_function <- function(a, b) {
return (a + b)
}
print(sum_function(1,2))
sum_function <- function(x1, x2) {
return (x1 + x2)
}
print(sum_function(1,2))
x <- c(7,4,3,8,9,25)
# Ejercicio 05:
sum_function <- function(x1, x2) {
return (x1 + x2)
}
print(sum_function(1,2))
in_vector <- function(num, vect) {
return (num %in% vect)
}
print(in_vector(3, c(2,3,4,5,6,7)))
in_vector <- function(num, vect) {
return (num %in% vect)
}
print(in_vector(100, c(2,3,4,5,6,7)))
print(in_vector(100, c(2,3,4,5,6,7)))
print(in_vector(3, c(2,3,4,5,6,7)))
a <- c(1,2,3,4,5,6,7,8,9)
b <- c(1L:10L)
df <- data.frame(a, b)
# Ejercicio 06:
a <- c(1,2,3,4,5,6,7,8,9, 10)
b <- c(1L:10L)
df <- data.frame(a, b)
print_colname <- function(dataf){
print(names(dataf[1]))
}
# Ejercicio 06:
a <- c(1,2,3,4,5,6,7,8,9, 10)
b <- c(1L:10L)
df <- data.frame(a, b)
print_colname <- function(dataf){
print(names(dataf[1]) + " " + class(dataf))
}
print_colname(df)
colnames_ <- names(dataf[1])
print_colname <- function(dataf){
colnames_ <- names(dataf)
coltype_  <- class(dataf)
for (i in seq_len(colnames_)) {
print(colnames_[i])
print(coltype_[i])
}
}
print_colname(df)
print(coltype_)
print_colname <- function(dataf){
colnames_ <- names(dataf)
coltype_  <- class(dataf)
print(coltype_)
for (i in seq_len(colnames_)) {
print(colnames_[i])
print(coltype_[i])
}
}
print_colname(df)
print_colname <- function(dataf){
colnames_ <- names(dataf)
coltype_  <- class(dataf$x)
print(colnames_)
for (i in seq_len(colnames_)) {
print(colnames_[i])
print(coltype_[i])
}
}
print_colname(df)
print_colname <- function(dataf){
colnames_ <- names(dataf)
coltype_  <- sapply(dataf, class)
print(coltype_)
for (i in seq_len(colnames_)) {
print(colnames_[i])
print(coltype_[i])
}
}
print_colname(df)
print_colname <- function(dataf){
colnames_ <- names(dataf)
coltype_  <- sapply(dataf, class)
for (i in 1:ncol(dataf)) {
print(colnames_[i])
print(coltype_[i])
}
}
print_colname(df)
x <- vector()
x
c <- c(1,2,3,4,5,5,5,5,6,7)
cuantas <- function(vect_, num) {
return(len(num %in% vect_))
}
cuantas(c, 5)
c <- c(1,2,3,4,5,5,5,5,6,7)
cuantas <- function(vect_, num) {
return(length(which(vect_==num)))
}
cuantas(c, 5)
c <- c(1,2,3,4,5,5,5,5,6,7)
cuantas <- function(vect_, num) {
return(length(which(vect_==num)))
}
cuantas(c, 2)
# Crear un función 'cuantas  que dado un vector y un entero
# regrese cuantas veces aparece el entero dentro del vector
c <- c(1,2,3,4,5,5,5,5,6,7, 7)
cuantas <- function(vect_, num) {
return(length(which(vect_==num)))
}
cuantas(c, 7)
unique <- function(vect){
new_vect <- c()
for (i in 1:along(vect)) {
if (vect[i] %in% new_vect) {
next()
} else {
new_vect <- c(new_vect, vect[i])
}
}
return(new_vect)
}
unique(vect = c(1,1,2,2,2,3,3,3,3,4,4,4,4,4))
unique <- function(vect){
new_vect <- c()
for (i in 1:length(vect)) {
if (vect[i] %in% new_vect) {
next()
} else {
new_vect <- c(new_vect, vect[i])
}
}
return(new_vect)
}
unique(vect = c(1,1,2,2,2,3,3,3,3,4,4,4,4,4))
source('~/MyProyects/MCPI/MCPI_Homework/01_AyPD/Clase/tarea02.R', echo=TRUE)
source('~/MyProyects/MCPI/MCPI_Homework/01_AyPD/Clase/tarea02.R', echo=TRUE)
cuantas(vect_, 8)
# Crear un función 'cuantas' que dado un vector y un entero
# regrese cuantas veces aparece el entero dentro del vector
vect_ <- c(1,2,3,4,5,5,5,5,6,7, 7,8,8,8,8)
cuantas <- function(vect_, num) {
return(length(which(vect_==num)))
}
cuantas(vect_, 8)
vect_ <- c(1,2,3,4,5,5,5,5,6,7, 7,8,8,8,8)
cuantas <- function(vect_, num) {
return(length(which(vect_==num)))
}
cuantas(vect_, 8)
cuantas(vect_, 0)
cuantas(vect_, 1)
unique(vect = c(1,1,2,2,2,3,3,3,3,4,4,4,4,4))
unique(vect = c(1,1,2,2,2,3,3,3,3,4,4,4,4,4))
unique(vect = c(1,1,2,2,2,3,3,3,3,4,4,4,4,4))
unique(vect = c(1,2,2,3,3,3,4,4,4,4,5,5,5,5,5,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9))
x_values <- c(seq(1970,2020, by=10))
y_values <- c(11000, 14000, 18000, 23000, 29000, 36000)
data_ <- data.frame(x_values, y_values)
model <- lm(y_values ~ x_values, data = data_)
summary(model)
plot(data_, pch = 16, col = "blue") #Plot the results
abline(model) #Add a regression line
print("Para el 2050 se estima un valor de: ")
print(-975666.67 + (500*2050))
df <- data.frame(x_1, x_2, x_3, x_4, y_v)
# data normalization
x_1 <- c(seq(1970,2020, by=10))
x_2 <- c(60,30,100,20,70,10)
x_3 <- c(40, 140, 300, 90, 100, 30)
x_4 <- c(5,10, 7, 15,2,1)
y_v <- c(11000, 14000, 18000, 23000, 29000, 36000)
df <- data.frame(x_1, x_2, x_3, x_4, y_v)
df_un <- data.frame(x_1, x_2, x_3, x_4, y_v)
xn_1 <- normalize(df_un$x_1, method = "standardize", range = c(0, 1), margin = 1L, on.constant = "quiet")
xn_2 <- normalize(df_un$x_2, method = "standardize", range = c(0, 1), margin = 1L, on.constant = "quiet")
xn_3 <- normalize(df_un$x_3, method = "standardize", range = c(0, 1), margin = 1L, on.constant = "quiet")
xn_4 <- normalize(df_un$x_4, method = "standardize", range = c(0, 1), margin = 1L, on.constant = "quiet")
yn_v <- normalize(df_un$y_v, method = "standardize", range = c(0, 1), margin = 1L, on.constant = "quiet")
xn_1 <- x_1 - mean(x_1)) / sd(x_1)
# data normalization
x_1 <- c(seq(1970,2020, by=10))
x_2 <- c(60,30,100,20,70,10)
x_3 <- c(40, 140, 300, 90, 100, 30)
x_4 <- c(5,10, 7, 15,2,1)
y_v <- c(11000, 14000, 18000, 23000, 29000, 36000)
df_un <- data.frame(x_1, x_2, x_3, x_4, y_v)
xn_1 <- x_1 - mean(x_1)) / sd(x_1)
xn_1 <- (x_1 - mean(x_1)) / sd(x_1)
xn_1 <- (x_1 - mean(x_1)) / sd(x_1)
xn_2 <- (x_2 - mean(x_2)) / sd(x_2)
xn_3 <- (x_3 - mean(x_3)) / sd(x_3)
xn_4 <- (x_4 - mean(x_4)) / sd(x_4)
yn_v <- (y_n - mean(y_n)) / sd(y_n)
xn_1 <- (x_1 - mean(x_1)) / sd(x_1)
xn_2 <- (x_2 - mean(x_2)) / sd(x_2)
xn_3 <- (x_3 - mean(x_3)) / sd(x_3)
xn_4 <- (x_4 - mean(x_4)) / sd(x_4)
yn_v <- (y_v - mean(y_v)) / sd(y_v)
df_normalized <- data.frame(xn_1, xn_2, xn_3, xn_4, yn_v)
df_normalized
sd(x_1)
sd(x_2)
xn_1 <- (x_1 - mean(x_1)) / sd(x_1)
xn_2 <- (x_2 - mean(x_2)) / sd(x_2)
xn_3 <- (x_3 - mean(x_3)) / sd(x_3)
xn_4 <- (x_4 - mean(x_4)) / sd(x_4)
yn_v <- (y_v - mean(y_v)) / sd(y_v)
df_normalized <- data.frame(xn_1, xn_2, xn_3, xn_4, yn_v)
df_normalized
knitr::opts_chunk$set(echo = TRUE)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv")
summary()
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary()
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
table(heart_data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
describe(heart_data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
str(data)
str(data)
str(data)
summary(data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
summary(heart_data)
str(data)
setwd("/home/ospcx/MyProyects/MCPI/MCPI_Homework/05_FSTAT/Proyecto Terminal/src/")
data <- read.csv(file = "../data/heart.csv", header = TRUE, sep = ",", stringsAsFactors=FALSE)
heart_data <- data.frame(data)
str(data)
